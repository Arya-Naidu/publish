pipeline {
    agent any

    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/Pritam-Khergade/student-ui.git'
            }
        }
        stage('docker build') {
            steps {
                script {
                    def version = getNextVersion()
                    sh "docker build -t student:${version} ."
                }
            }
        }
        stage('docker push') {
            steps {
                script {
                    def version = getNextVersion()
                    sh """ 
                    aws --profile <profile_name> ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/r7u6z3d8
                    aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/r7u6z3d8
                    docker tag student:${version} public.ecr.aws/r7u6z3d8/student:${version}
                    docker push public.ecr.aws/r7u6z3d8/student:${version}
                    """
                }
            }
        }
    }
}

def getNextVersion() {
    // Retrieve current version from Docker registry or any other source
    // You can implement your own logic to calculate the next version
    // For simplicity, let's assume the version starts from 1 and increments by 1 each time
    def currentVersion = sh(script: "aws ecr-public describe-images --repository-name student --region us-east-1 | jq -r '.imageDetails[-1].imageTags[-1]'", returnStdout: true).trim()
    if (currentVersion == null || currentVersion.isEmpty()) {
        return '1'
    } else {
        def versionNumber = currentVersion.tokenize('.')[-1].toInteger() + 1
        return versionNumber.toString()
    }
}
